import abjad
import ide
abjad_ide = ide.AbjadIDE(test=True)


def test_AbjadIDE_show_help_01():
    r'''In assets directory.
    '''

    abjad_ide('red aa ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : builds : _assets (empty) : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_02():
    r'''In build directory.
    '''

    abjad_ide('red %letter ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : builds : letter : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    back cover - edit (bce)',
        '    back cover - generate (bcg)',
        '    back cover - interpret (bci)',
        '    back cover - open (bco)',
        '    back cover - trash (bct)',
        '',
        '    build - build (bld)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    front cover - edit (fce)',
        '    front cover - generate (fcg)',
        '    front cover - interpret (fci)',
        '    front cover - open (fco)',
        '    front cover - trash (fct)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    layout - make (yom)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    lys - collect (lyc*)',
        '',
        '    music - edit (me)',
        '    music - generate (mg)',
        '    music - interpret (mi)',
        '    music - open (mo)',
        '    music - trash (mt)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    preface - edit (pe)',
        '    preface - generate (pg)',
        '    preface - interpret (pi)',
        '    preface - open (po)',
        '    preface - trash (pt)',
        '',
        '    score - edit (re)',
        '    score - generate (rg)',
        '    score - interpret (ri)',
        '    score - open (ro)',
        '    score - trash (rt)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    stylesheet - edit (ye)',
        '    stylesheet - generate (yg)',
        '    stylesheet - trash (yt)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        '    ALL - b&w (bw*)',
        '    ALL - color (cl*)',
        '    CLEFS - b&w (cbw)',
        '    CLEFS - color (ccl)',
        '    DYNAMICS - b&w (dbw)',
        '    DYNAMICS - color (dcl)',
        '    INSTRUMENTS - b&w (ibw)',
        '    INSTRUMENTS - color (icl)',
        '    MARGIN MARKUP - b&w (rbw)',
        '    MARGIN MARKUP - color (rcl)',
        '    METRONOME MARKS - b&w (mbw)',
        '    METRONOME MARKS - color (mcl)',
        '    STAFF LINES - b&w (slbw)',
        '    STAFF LINES - color (slcl)',
        '    TIME SIGNATURES - b&w (tsbw)',
        '    TIME SIGNATURES - color (tscl)',
        '',
        '    CLOCK_TIME_MARKUP - activate (ctm)',
        '    CLOCK_TIME_MARKUP - deactivate (ctmx)',
        '    EMPTY_START_BAR - activate (esb)',
        '    EMPTY_START_BAR - deactivate (esbx)',
        '    FIGURE_NAME_MARKUP - activate (fnm)',
        '    FIGURE_NAME_MARKUP - deactivate (fnmx)',
        '    STAGE_NUMBER_MARKUP - activate (snm)',
        '    STAGE_NUMBER_MARKUP - deactivate (snmx)',
        '',
        '    [FERMATA_BAR_LINE] - activate (fbl)',
        '    [FERMATA_BAR_LINE] - deactivate (fblx)',
        '    [LAYOUT] - activate (lo)',
        '    [LAYOUT] - deactivate (lox)',
        '    [SPACING] - activate (sp)',
        '    [SPACING] - deactivate (spx)',
        '    [SPACING_MARKUP] - activate (spm)',
        '    [SPACING_MARKUP] - deactivate (spmx)',
        '',
        ]


def test_AbjadIDE_show_help_03():
    r'''In builds directory.
    '''

    abjad_ide('red bb ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : builds : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_04():
    r'''In contents directory.
    '''

    abjad_ide('red ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_05():
    r'''In distribution directory.
    '''

    abjad_ide('red dd ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : distribution : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_06():
    r'''In library.
    '''

    if not abjad_ide.test_baca_directories():
        return

    abjad_ide('ll ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Abjad IDE : library : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    path - duplicate (dup)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_07():
    r'''In material directory.
    '''

    abjad_ide('red %rpc ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : materials : red_pitch_classes : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    definition - check (dfk)',
        '    definition - edit (dfe)',
        '    definition - trash (dft)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next package (>)',
        '    hop - next score (>>)',
        '    hop - previous package (<)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    ly - edit (lye)',
        '    ly - interpret (lyi)',
        '    ly - make (lym)',
        '    ly - trash (lyt)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    pdf - make (pdfm)',
        '    pdf - open (pdfo)',
        '    pdf - trash (pdft)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_08():
    r'''In materials directory.
    '''

    abjad_ide('red mm ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : materials : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    definitions - check (dfk*)',
        '    definitions - edit (dfe*)',
        '    definitions - trash (dft*)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next package (>)',
        '    hop - next score (>>)',
        '    hop - previous package (<)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    lys - interpret (lyi*)',
        '    lys - make (lym*)',
        '    lys - trash (lyt*)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    pdfs - make (pdfm*)',
        '    pdfs - trash (pdft*)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_09():
    r'''In scores directory.
    '''

    abjad_ide('? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Abjad IDE : scores : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci*)',
        '    git - diff (diff*)',
        '    git - pull (pull*)',
        '    git - push (push*)',
        '    git - status (st*)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    path - duplicate (dup)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    scores - open (ro*)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_10():
    r'''In segment directory.
    '''

    abjad_ide('red %A ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : segments : A : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    definition - check (dfk)',
        '    definition - edit (dfe)',
        '    definition - trash (dft)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next package (>)',
        '    hop - next score (>>)',
        '    hop - previous package (<)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    ly - edit (lye)',
        '    ly - interpret (lyi)',
        '    ly - make (lym)',
        '    ly - trash (lyt)',
        '',
        '    midi - make (midm)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    pdf - make (pdfm)',
        '    pdf - open (pdfo)',
        '    pdf - trash (pdft)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        '    ALL - b&w (bw*)',
        '    ALL - color (cl*)',
        '    CLEFS - b&w (cbw)',
        '    CLEFS - color (ccl)',
        '    DYNAMICS - b&w (dbw)',
        '    DYNAMICS - color (dcl)',
        '    INSTRUMENTS - b&w (ibw)',
        '    INSTRUMENTS - color (icl)',
        '    MARGIN MARKUP - b&w (rbw)',
        '    MARGIN MARKUP - color (rcl)',
        '    METRONOME MARKS - b&w (mbw)',
        '    METRONOME MARKS - color (mcl)',
        '    STAFF LINES - b&w (slbw)',
        '    STAFF LINES - color (slcl)',
        '    TIME SIGNATURES - b&w (tsbw)',
        '    TIME SIGNATURES - color (tscl)',
        '',
        '    CLOCK_TIME_MARKUP - activate (ctm)',
        '    CLOCK_TIME_MARKUP - deactivate (ctmx)',
        '    EMPTY_START_BAR - activate (esb)',
        '    EMPTY_START_BAR - deactivate (esbx)',
        '    FIGURE_NAME_MARKUP - activate (fnm)',
        '    FIGURE_NAME_MARKUP - deactivate (fnmx)',
        '    STAGE_NUMBER_MARKUP - activate (snm)',
        '    STAGE_NUMBER_MARKUP - deactivate (snmx)',
        '',
        '    [FERMATA_BAR_LINE] - activate (fbl)',
        '    [FERMATA_BAR_LINE] - deactivate (fblx)',
        '    [LAYOUT] - activate (lo)',
        '    [LAYOUT] - deactivate (lox)',
        '    [SPACING] - activate (sp)',
        '    [SPACING] - deactivate (spx)',
        '    [SPACING_MARKUP] - activate (spm)',
        '    [SPACING_MARKUP] - deactivate (spmx)',
        '',
        ]


def test_AbjadIDE_show_help_11():
    r'''In segments directory.
    '''

    abjad_ide('red gg ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : segments : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    definitions - check (dfk*)',
        '    definitions - edit (dfe*)',
        '    definitions - trash (dft*)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next package (>)',
        '    hop - next score (>>)',
        '    hop - previous package (<)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    lys - interpret (lyi*)',
        '    lys - make (lym*)',
        '    lys - trash (lyt*)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    pdfs - make (pdfm*)',
        '    pdfs - trash (pdft*)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        '    ALL - b&w (bw*)',
        '    ALL - color (cl*)',
        '    CLEFS - b&w (cbw)',
        '    CLEFS - color (ccl)',
        '    DYNAMICS - b&w (dbw)',
        '    DYNAMICS - color (dcl)',
        '    INSTRUMENTS - b&w (ibw)',
        '    INSTRUMENTS - color (icl)',
        '    MARGIN MARKUP - b&w (rbw)',
        '    MARGIN MARKUP - color (rcl)',
        '    METRONOME MARKS - b&w (mbw)',
        '    METRONOME MARKS - color (mcl)',
        '    STAFF LINES - b&w (slbw)',
        '    STAFF LINES - color (slcl)',
        '    TIME SIGNATURES - b&w (tsbw)',
        '    TIME SIGNATURES - color (tscl)',
        '',
        '    CLOCK_TIME_MARKUP - activate (ctm)',
        '    CLOCK_TIME_MARKUP - deactivate (ctmx)',
        '    EMPTY_START_BAR - activate (esb)',
        '    EMPTY_START_BAR - deactivate (esbx)',
        '    FIGURE_NAME_MARKUP - activate (fnm)',
        '    FIGURE_NAME_MARKUP - deactivate (fnmx)',
        '    STAGE_NUMBER_MARKUP - activate (snm)',
        '    STAGE_NUMBER_MARKUP - deactivate (snmx)',
        '',
        '    [FERMATA_BAR_LINE] - activate (fbl)',
        '    [FERMATA_BAR_LINE] - deactivate (fblx)',
        '    [LAYOUT] - activate (lo)',
        '    [LAYOUT] - deactivate (lox)',
        '    [SPACING] - activate (sp)',
        '    [SPACING] - deactivate (spx)',
        '    [SPACING_MARKUP] - activate (spm)',
        '    [SPACING_MARKUP] - deactivate (spmx)',
        '',
        ]


def test_AbjadIDE_show_help_12():
    r'''In stylesheets directory.
    '''

    abjad_ide('red yy ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : stylesheets : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_13():
    r'''In test directory.
    '''

    abjad_ide('red tt ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : test : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_14():
    r'''In tools directory.
    '''

    abjad_ide('red oo ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : tools : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]


def test_AbjadIDE_show_help_15():
    r'''In wrapper directory.
    '''

    abjad_ide('red ww ? q')
    menu = abjad_ide.io.transcript.menus[-1]
    assert menu == [
        'Red Score (2017) : wrapper : help',
        '',
        '    all - doctest (^^)',
        '    all - edit (@@)',
        '    all - pdfs (**)',
        '    all - pytest (++)',
        '',
        '    clipboard - copy (cp)',
        '    clipboard - empty (cx)',
        '    clipboard - paste (cv)',
        '    clipboard - show (cs)',
        '',
        '    git - commit (ci)',
        '    git - diff (diff)',
        '    git - pull (pull)',
        '    git - push (push)',
        '    git - status (st)',
        '',
        '    go - back (-)',
        '    go - directory (%)',
        '    go - library (ll)',
        '    go - quit (q)',
        '    go - scores (ss)',
        '    go - up (..)',
        '',
        '    hop - next score (>>)',
        '    hop - previous score (<<)',
        '',
        '    log - aliases (al)',
        '    log - latex (lx)',
        '    log - lilypond (lp)',
        '',
        '    package - assets (aa)',
        '    package - builds (bb)',
        '    package - contents (cc)',
        '    package - distribution (dd)',
        '    package - etc (ee)',
        '    package - materials (mm)',
        '    package - segments (gg)',
        '    package - stylesheets (yy)',
        '    package - test (tt)',
        '    package - tools (oo)',
        '    package - wrapper (ww)',
        '',
        '    path - duplicate (dup)',
        '    path - get (get)',
        '    path - new (new)',
        '    path - remove (rm)',
        '    path - rename (ren)',
        '',
        '    score - open (ro)',
        '',
        '    shell - call (!)',
        '',
        '    show - column (;)',
        '    show - help (?)',
        '',
        '    smart - doctest (^)',
        '    smart - edit (@)',
        '    smart - pdf (*)',
        '    smart - pytest (+)',
        '',
        '    text - edit (it)',
        '    text - replace (rp)',
        '    text - search (sr)',
        '',
        ]
